[{"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\DetailOne.js":"1","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\Detail.js":"2","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\WebTorrentPage.js":"3","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\App.tsx":"4","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Video.tsx":"5","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\index.tsx":"6","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\Home.tsx":"7","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\util\\Api.ts":"8","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Footer.tsx":"9","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Navbar.tsx":"10"},{"size":5862,"mtime":1611207822402,"results":"11","hashOfConfig":"12"},{"size":10699,"mtime":1611157287580,"results":"13","hashOfConfig":"12"},{"size":154,"mtime":1611089984415,"results":"14","hashOfConfig":"12"},{"size":743,"mtime":1611205786032,"results":"15","hashOfConfig":"12"},{"size":883,"mtime":1611206544580,"results":"16","hashOfConfig":"12"},{"size":207,"mtime":1609080999397,"results":"17","hashOfConfig":"12"},{"size":10923,"mtime":1611152877843,"results":"18","hashOfConfig":"12"},{"size":185,"mtime":1610927138918,"results":"19","hashOfConfig":"12"},{"size":526,"mtime":1611124381514,"results":"20","hashOfConfig":"12"},{"size":3649,"mtime":1611122418774,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19puyag",{"filePath":"24","messages":"25","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\DetailOne.js",["44","45"],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\Detail.js",["46","47","48"],"import React, {useState, useEffect} from 'react';\r\nimport Api from '../util/Api'\r\nimport { useHistory , Link, useParams} from \"react-router-dom\";\r\nimport {Helmet} from \"react-helmet\";\r\nexport default function Detail(props)  {\r\n  let history = useHistory();\r\n  const [movie, setMovie] = useState();\r\n  const [vVisibility, setVVisibility] = useState(false);\r\n  const [hasClcik, setHasClick] = useState(false);\r\n  const [iframe, setIframe] = useState();\r\n  const [skipAnounce, setSkipAnounce] = useState(false);\r\n  const {url} = useParams();\r\n  async function getByUrl(url){\r\n    await Api.post(\"/movies/get-by-url\",{url : url})\r\n    .then((response) => {\r\n      setMovie(response.data);\r\n      if(response.data.category ===\"filme\"){\r\n        webtor(response.data);\r\n      }\r\n    }).catch((error) => {\r\n      window.location.reload()\r\n      console.error(error)\r\n    })\r\n  }\r\n\r\n  function webtor(video){\r\n    window.webtor = window.webtor || [];\r\n\r\n    window.webtor.push({\r\n        id: 'player',\r\n        baseUrl: 'https://webtor.io',\r\n        magnet:  video.magnet.split(\",\")[0],\r\n        width: '100%',\r\n        height: '100%',\r\n        features: {\r\n            continue:    false\r\n        },\r\n        on: function(e) {\r\n            if (e.name === window.webtor.TORRENT_FETCHED) {\r\n                for (const f of e.data.files) {\r\n                    if(f.name === \"1XBET.COM_promo_SHREK_dinheiro_livre.mp4\" || f.name ===  \"COMANDOTORRENTS.COM.mp4\"){\r\n                        setHasClick(true);\r\n                    }\r\n                    if (!f.name.endsWith('.mkv')) continue;\r\n                }\r\n            }\r\n            if (e.name === window.webtor.TORRENT_ERROR) {\r\n                console.log('Torrent error!')\r\n            }\r\n            if (e.name === window.webtor.INITED) {\r\n            }\r\n            if (e.name === window.webtor.OPEN) {\r\n            }\r\n            if (e.name === window.webtor.OPEN_SUBTITLES) {\r\n            }\r\n        },\r\n    });\r\n  }\r\n  function webtorEp(ep){\r\n    window.webtor = window.webtor || [];\r\n\r\n    window.webtor.push({\r\n        id: 'player',\r\n        baseUrl: 'https://webtor.io',\r\n        magnet:  ep,\r\n        width: '100%',\r\n        height: '100%',\r\n        features: {\r\n            continue:    false\r\n        },\r\n        on: function(e) {\r\n            if (e.name === window.webtor.TORRENT_FETCHED) {\r\n                for (const f of e.data.files) {\r\n                    if(f.name === \"1XBET.COM_promo_SHREK_dinheiro_livre.mp4\" || f.name ===  \"COMANDOTORRENTS.COM.mp4\"){\r\n                        setHasClick(true);\r\n                    }\r\n                    if (!f.name.endsWith('.mp4')) continue;\r\n                }\r\n            }\r\n            if (e.name === window.webtor.TORRENT_ERROR) {\r\n                console.log('Torrent error!')\r\n            }\r\n            if (e.name === window.webtor.INITED) {\r\n            }\r\n            if (e.name === window.webtor.OPEN) {\r\n            }\r\n            if (e.name === window.webtor.OPEN_SUBTITLES) {\r\n            }\r\n        },\r\n    });\r\n  }\r\n\r\n  var handleChange = function(event){\r\n    webtorEp(event.target.value);\r\n    setVVisibility(true);\r\n  }\r\n\r\n  var handleChange2 = function(event){\r\n    webtorEp(event.target.value);\r\n    iframe.remove();\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    getByUrl(url)\r\n    setIframe(document.getElementsByTagName('iframe')[0]);\r\n    watchAd(history)\r\n    // eslint-disable-next-line\r\n  },[])\r\n\r\n  async function watchAd(){\r\n var end = 0;\r\n  var interval = setInterval(function () {\r\n        if(end >= 50 || history.location.pathname === \"/\" || history.location.pathname === \"localhost:3000\"){\r\n            clearInterval(interval)\r\n        }\r\n    \r\n    var scripts = [...document.getElementsByTagName(\"script\")]\r\n    var scpts = scripts?.map(scr => {\r\n        if(scr.src.includes(\"p412601\")){\r\n            scr.remove()\r\n        }\r\n    })\r\n    end++;\r\n    // console.log(scpts);\r\n    }, 1000)\r\n  }\r\n\r\n function onWatch(){\r\n        setVVisibility(true)\r\n        if(hasClcik){\r\n            setSkipAnounce(true);\r\n        }\r\n  }\r\n\r\n  function getBestImg(movie){\r\n    if(movie?.urlImg3){\r\n      return movie.urlImg3;\r\n    }\r\n    else if(movie?.urlImg2){\r\n      return movie.urlImg2;\r\n    }\r\n    else{\r\n      return movie?.urlImg;\r\n    }\r\n  }\r\n\r\n  return (<div className=\"detail-bg\">\r\n                <Helmet>\r\n                <title>{movie?.title + \" assistir online\"}</title>\r\n                <meta name=\"description\" content={movie?.synopsis}></meta>\r\n                <meta property=\"og:title\" content={movie?.title + \" assistir online\"}></meta>\r\n                <meta property=\"og:url\" content={\"http://filmes-temporadas-online.ml/\" + movie?.url}></meta>\r\n                </Helmet>\r\n                <Link className=\"back-button\" to=\"/\">{window.innerWidth < 400? 'VOLTAR' : \"⮢\"}</Link>                <div className=\"row\">\r\n                <div className=\"select-series\">\r\n                <select className={(vVisibility && movie?.category === \"serie\") ? '' : 'collapsed'} onChange={handleChange2} >\r\n                            <option  default>Selecionar outro epsódio</option>\r\n                        {movie?.eps.map(ep => {\r\n                            return (\r\n                                <option  value={ep[Object.keys(ep)]}>{Object.keys(ep)}</option>\r\n                            )\r\n                        })}\r\n                        </select>\r\n                </div>\r\n                </div>\r\n                <div className=\"parent-player\">\r\n                    <div className={vVisibility? \"visibility-show\" : \"\"} id=\"player\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className={skipAnounce? \"skip-anounce\" : \"collapsed\"}>Pause o anúncio ou clique em Next para pular:</div>\r\n                </div>\r\n                <div className={skipAnounce? \"skip-invisible\" : \"collapsed\"} onClick={() => setSkipAnounce(false)}></div>\r\n                <img  className={!vVisibility? \"img-resume\" : \"collapsed\"} src={getBestImg(movie)} alt={movie?.name}></img>\r\n                {!vVisibility?\r\n                <div className={\"content-detail\"}>\r\n                    <div className=\"border-center row d-flex\">\r\n                    <div className=\"content-item\">\r\n                        <div className=\"title\">\r\n                            <h1 >{movie?.name.toUpperCase()}</h1>\r\n                        </div>\r\n                        <div className=\"studio\">\r\n                            <span>({movie?.studio})</span>\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                            <span>Estreado: {movie?.release}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>Duração: {movie?.duration}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>Autor: {movie?.author}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>Gênero: {movie?.genere}</span>\r\n                        </div>\r\n                        <div className=\"text-yellow\">\r\n                            <span>Nota: {movie?.imdb}</span>\r\n                        </div>\r\n                        <div className=\"text-shadow-light-blue\">\r\n                            <p>Sinopse: {movie?.synopsis}</p>\r\n                        </div>\r\n\r\n                        <div className=\"bg-dark-blue text-yellow\">\r\n                            <p><bold>Atenção : O magnet player pode demorar um pouco para baixar seu filme. Isso sempre depende do horário e quantidade de 'peers || seeders'.</bold></p>\r\n                        </div>\r\n\r\n                        <div className={movie?.category === \"filme\"? 'mt-2' : 'collapsed'}>\r\n                            <button onClick={() => onWatch() }>Assistir filme </button>\r\n                        </div>\r\n                        <div className=\"mt-2 w-50 bg-dark-blue\">\r\n                        <select className={movie?.category === \"serie\"? '' : 'collapsed'} onChange={handleChange} >\r\n                            <option  default>Escolha um epsódio</option>\r\n                        {movie?.eps.map(ep => {\r\n                            return (\r\n                                <option  value={ep[Object.keys(ep)]}>{Object.keys(ep)}</option>\r\n                            )\r\n                        })}\r\n                        </select>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"hide-mobile  picture-item\">\r\n                            <img src={getBestImg(movie)} alt={movie?.name}></img>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"lastcontent\">\r\n            <div className=\"content d-block d-col\">\r\n            <div >\r\n                    <h2>Trailler {movie?.title}</h2>\r\n                    </div>\r\n                    <div>\r\n                    <iframe className=\"trailer\"\r\n                    src={`https://www.youtube-nocookie.com/embed/${movie?.trailer}?rel=0&modestbranding=1&showinfo=0&autoplay=1`}\r\n                    frameborder=\"0\" allow=\"picture-in-picture; paused\"\r\n                    allowfullscreen></iframe>\r\n                    </div>\r\n                <div className=\"text-shadow-light-blue\">\r\n                    <p>\r\n                    {movie?.plot}\r\n                    </p>\r\n                </div>\r\n            <div className=\"mt-1 text-shadow-light-blue\">\r\n                \r\n                    <div >\r\n                        <strong>Classificação: {movie?.classifBR}</strong>\r\n                    </div>\r\n                    <div >\r\n                    <strong>Orçamento: {movie?.budget}</strong>\r\n                    </div>\r\n                    <div >\r\n                    <strong> Bilheteria: {movie?.ticketgain}</strong>\r\n                    </div>\r\n                    <div >\r\n                        <strong>{movie?.releaseCinemaBr}</strong>\r\n                    </div>\r\n                    <div >\r\n                    <strong>{movie?.releaseDigital}</strong>\r\n                    </div>\r\n                    <div >\r\n                    <strong>{movie?.releaseDvD}</strong>\r\n                    </div>\r\n\r\n                    \r\n            </div>\r\n            </div>\r\n            </div>\r\n\r\n\r\n                </div>\r\n                \r\n                : \"\"}\r\n  \r\n            <div className=\"comments\">\r\n                    <div className=\"fb-comments\" data-href=\"https://developers.facebook.com/docs/plugins/comments#configurator\" data-width=\"500\" data-numposts=\"5\"></div>\r\n            </div>\r\n        </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\WebTorrentPage.js",[],["49","50"],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\App.tsx",["51"],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Video.tsx",[],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\index.tsx",[],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\Home.tsx",[],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\util\\Api.ts",[],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Footer.tsx",[],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Navbar.tsx",[],{"ruleId":"52","severity":1,"message":"53","line":7,"column":7,"nodeType":"54","messageId":"55","endLine":7,"endColumn":14},{"ruleId":"56","severity":1,"message":"57","line":117,"column":21,"nodeType":"58","endLine":120,"endColumn":37},{"ruleId":"52","severity":1,"message":"59","line":120,"column":9,"nodeType":"54","messageId":"55","endLine":120,"endColumn":14},{"ruleId":"60","severity":1,"message":"61","line":120,"column":34,"nodeType":"62","messageId":"63","endLine":120,"endColumn":36},{"ruleId":"56","severity":1,"message":"57","line":235,"column":21,"nodeType":"58","endLine":238,"endColumn":37},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":7,"column":8,"nodeType":"54","messageId":"55","endLine":7,"endColumn":13},"no-unused-vars","'history' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/iframe-has-title","<iframe> elements must have a unique title property.","JSXOpeningElement","'scpts' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","no-native-reassign",["70"],"no-negated-in-lhs",["71"],"@typescript-eslint/no-unused-vars","'Video' is defined but never used.","no-global-assign","no-unsafe-negation"]