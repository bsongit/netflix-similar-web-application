[{"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Sidebar.tsx":"1","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\Home.tsx":"2","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Navbar.tsx":"3","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Cover.tsx":"4","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\Detail.js":"5","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\util\\Api.ts":"6","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\App.tsx":"7","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Carrossel.tsx":"8","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Pager.tsx":"9","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\util\\ArrayDB.ts":"10","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\LoadComponent.tsx":"11","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Footer.tsx":"12","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\ChooseUrl.tsx":"13","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\DetailOne.js":"14","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\index.tsx":"15","C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\MyRoutes.tsx":"16"},{"size":1165,"mtime":1610889850762,"results":"17","hashOfConfig":"18"},{"size":10059,"mtime":1610782818196,"results":"19","hashOfConfig":"18"},{"size":3714,"mtime":1610772820007,"results":"20","hashOfConfig":"18"},{"size":1172,"mtime":1610782459707,"results":"21","hashOfConfig":"18"},{"size":7986,"mtime":1610902449703,"results":"22","hashOfConfig":"18"},{"size":185,"mtime":1610916952271,"results":"23","hashOfConfig":"18"},{"size":573,"mtime":1610786470234,"results":"24","hashOfConfig":"18"},{"size":408,"mtime":1610554977405,"results":"25","hashOfConfig":"18"},{"size":217,"mtime":1609080999397,"results":"26","hashOfConfig":"18"},{"size":375,"mtime":1610204417630,"results":"27","hashOfConfig":"18"},{"size":290,"mtime":1610466557539,"results":"28","hashOfConfig":"18"},{"size":1140,"mtime":1610776704747,"results":"29","hashOfConfig":"18"},{"size":1414,"mtime":1610783016039,"results":"30","hashOfConfig":"18"},{"size":4577,"mtime":1610894514466,"results":"31","hashOfConfig":"18"},{"size":207,"mtime":1609080999397,"results":"32","hashOfConfig":"18"},{"size":1680234,"mtime":1610829546195,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"19puyag",{"filePath":"36","messages":"37","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Sidebar.tsx",["74","75","76","77"],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\Home.tsx",["78","79"],"import { render } from '@testing-library/react';\r\nimport React, {useState, useEffect} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Carrossel from '../components/Carrossel';\r\nimport ChooseUrl from '../components/ChooseUrl';\r\nimport Cover from '../components/Cover';\r\nimport Footer from '../components/Footer';\r\nimport LoadComponent from '../components/LoadComponent';\r\nimport Navbar from '../components/Navbar';\r\nimport Pager from '../components/Pager';\r\nimport Api from '../util/Api';\r\n\r\ntype Props = {}\r\n\r\ninterface Movie {\r\n  name: string,\r\n  urlImg: string,\r\n  urlImg2: string,\r\n  urlImg3: string,\r\n  data: Date,\r\n  url: string,\r\n  url1: string,\r\n  url2: string,\r\n  imdb: string,\r\n  release: string,\r\n  synopsis: string\r\n\r\n}\r\n\r\nexport default function Home(props : Props)  {\r\n\r\n  const [movies, setMovies] = useState<Array<Movie>>([]);\r\n  const [selectedMovie, setSelectedMovie] = useState<Movie>();\r\n  const [windowChosseUrl, setWindowChosseUrl] = useState<boolean>(false);\r\n  const [primaryMovie, setPrimaryMovie] = useState<Movie>();\r\n  const [load, setLoad] = useState<boolean>(false);\r\n  const [moviesCarrossel, setMoviesCarrossel] = useState<Array<Movie>>([]);\r\n  const [skipNumber, setSkipNumber] = useState<number>(0);\r\n  const [index, setIndex]   = useState<number>(0);\r\n  const [pageOffSetStart, setPageOffSetStart]   = useState<number>(0);\r\n  const [pageOffSetEnd, setPageOffSetEnd]   = useState<number>(5);\r\n  const [category, setCategory] = useState<string>(\"\");\r\n  const [genere, setGenere] = useState<string>(\"\");\r\n  const [isArrive, setArrive] = useState<boolean>(true);\r\n  const numberOfPages = new Array(900).fill(0);\r\n  let history = useHistory();\r\n\r\n  async function getMovies(skip : number, category : string, genere : string) {\r\n    Api.post('/movies/get15', {skip : skip, category: category, genere : genere})\r\n    .then((response: { data: Array<Movie>}) => {\r\n        setMovies(response.data);\r\n    })\r\n    .catch((error: any) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  async function loading(){\r\n    setArrive(false);\r\n    setTimeout(() => setLoad(false),1000)\r\n  }\r\n\r\n  async function getMoviesCorrossel(category : string, genere : string) {\r\n    Api.post('/movies/get3-carrossel',{category : category, genere : genere})\r\n    .then((response: { data: Array<Movie>}) => {\r\n        setMoviesCarrossel(response.data);\r\n        setPrimaryMovie(response.data[1]);\r\n    })\r\n    .catch((error: any) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  const  handleClassName = (number : number) : string => {\r\n    return `border ml-1 ${index === number ? \"bg-yellow\" : \"bg-dark-blue\"}`\r\n  }\r\n  const  handleClick = (currentIndex: number) : void => {\r\n    setLoad(true);\r\n    loading();\r\n    window.scrollTo(0, 0);\r\n    if(currentIndex <= pageOffSetStart  && pageOffSetStart - 1 > -1){\r\n      setPageOffSetStart(pageOffSetStart - 1);\r\n      setPageOffSetEnd(pageOffSetEnd - 1);\r\n    }\r\n    if(currentIndex >= pageOffSetEnd - 1 && pageOffSetEnd + 5 < numberOfPages.length){\r\n      setPageOffSetStart(currentIndex - 2);\r\n      setPageOffSetEnd(currentIndex + 3);\r\n    }\r\n    var currentSkipNumber = 15 * currentIndex;\r\n      setIndex(currentIndex);\r\n      setSkipNumber(currentSkipNumber);\r\n      getMovies(currentSkipNumber, category, genere);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getMoviesCorrossel(category, genere);\r\n    getMovies(skipNumber, category, genere);\r\n  },[skipNumber, category, genere]);\r\n\r\n  function selectMovie(url : string){\r\n    if(url != 'undefined'){\r\n    setLoad(true);\r\n    loading();\r\n    setTimeout(() => history.push(url),800)\r\n    }\r\n  }\r\n\r\n  function chooseUrl(movie : Movie){\r\n    setWindowChosseUrl(true);\r\n    setSelectedMovie(movie);\r\n  }\r\n\r\n  function getBestImg(movie : Movie){\r\n    if(movie?.urlImg3){\r\n      return movie.urlImg3;\r\n    }\r\n    else if(movie?.urlImg2){\r\n      return movie.urlImg2;\r\n    }\r\n    else{\r\n      return movie?.urlImg;\r\n    }\r\n  }\r\n\r\n\r\n  return (\r\n      <div className=\"container\">\r\n        {windowChosseUrl && selectedMovie? <ChooseUrl contexWindowModal={[windowChosseUrl,setWindowChosseUrl]} movieContext={selectedMovie} selectMovie={selectMovie}/> : \"\" }\r\n        \r\n          {load? <LoadComponent></LoadComponent> : \"\"}\r\n          <Navbar  chooseUrlFunc={chooseUrl} contextArrive={[isArrive,setArrive]} contextLoad={[load,setLoad]} context={[category,setCategory]} contextSidebar={[genere, setGenere]}/>\r\n          {window.innerWidth > 400? \r\n                <Carrossel>\r\n                {moviesCarrossel?.map((movie : Movie) => {\r\n                  return <Cover seeImdb={false} movie={movie} onClick={() => chooseUrl(movie)}/>;\r\n                })}\r\n              </Carrossel>\r\n          : <div className=\"primary-movie\" >\r\n              <img  src={getBestImg(moviesCarrossel[1])} alt={primaryMovie?.name}  onClick={() => chooseUrl(moviesCarrossel[1])}/>\r\n            </div>\r\n          }\r\n            {isArrive? \r\n                  <Pager>\r\n                      <h1 className=\"text-shadow-light-blue ml-1\">Filmes lançamentos em 2020</h1>\r\n                      <div className=\"row-pager\">\r\n                       <span className=\"hide-pc\">........................................................</span>\r\n                      {movies?.slice(0,5).map((movie : Movie) => {\r\n                        return <Cover seeImdb={true} movie={movie} onClick={() => chooseUrl(movie)} />;\r\n                      })}\r\n                      </div>\r\n                      <h2 className=\"text-shadow-light-blue ml-1\">Series online em 2020</h2>\r\n                      <div className=\"row-pager\">\r\n                      <span className=\"hide-pc\">........................................................</span>\r\n                      {movies?.slice(5,10).map((movie : Movie) => {\r\n                        return <Cover seeImdb={true} movie={movie} onClick={() => chooseUrl(movie)}/>;\r\n                      })}\r\n                      </div>\r\n                      \r\n                      <h2 className={\"text-shadow-light-blue ml-1\"}>Os 5 filmes mais assistidos em 2020</h2>\r\n                    \r\n                      <div className=\"row-pager\">\r\n                      <span className=\"hide-pc\">........................................................</span>\r\n                      \r\n                      {\r\n                      movies?.slice(10,15).map((movie : Movie) => {\r\n                        return <Cover seeImdb={true} movie={movie} onClick={() => chooseUrl(movie)}/>;\r\n                      })}\r\n                      </div>\r\n\r\n                      <h2 className={\"text-shadow-light-blue ml-1\"}>Outros titulos relacionados</h2>\r\n                      <div className=\"row-pager\">\r\n                      <span className=\"hide-pc\">........................................................</span>\r\n                      \r\n                      {\r\n                      movies?.slice(15,20).map((movie : Movie) => {\r\n                        return <Cover seeImdb={true} movie={movie} onClick={() => chooseUrl(movie)}/>;\r\n                      })\r\n                      }\r\n                      </div>\r\n                      <div className=\"hide-mobile row mt-1 pager-buttons\">\r\n                          <div className=\"pager-bt w-25 d-flex\">\r\n                          {numberOfPages.slice(pageOffSetStart,pageOffSetEnd).map((value,index) => {\r\n                            return <button className={handleClassName(index + pageOffSetStart)} onClick={() => handleClick(index + pageOffSetStart)}>{index + pageOffSetStart + 1}</button>\r\n                          })}\r\n                           <button className={handleClassName(-1)} disabled>[...]</button>\r\n                          <button className={handleClassName(-1)} onClick={() => handleClick(pageOffSetEnd + 4)}>{5 + pageOffSetEnd}</button>\r\n                          </div>\r\n                      </div>\r\n                      <Footer/>\r\n              </Pager>\r\n          :\r\n\r\n          <Pager>\r\n                <h3 className=\"text-shadow-light-blue ml-1\">Encontrados : {category && genere? category+ 's de '+ genere.toLocaleLowerCase() : genere} </h3>\r\n                <div className=\"row-pager\">\r\n                <span className=\"hide-pc\">........................................................</span>\r\n                {movies?.slice(20,25).map((movie : Movie) => {\r\n                  return <Cover seeImdb={true} movie={movie} onClick={() => chooseUrl(movie)} />;\r\n                })}\r\n                </div>\r\n                <div className=\"row-pager\">\r\n                <span className=\"hide-pc\">........................................................</span>\r\n                {movies?.slice(25,30).map((movie : Movie) => {\r\n                  return <Cover seeImdb={true} movie={movie} onClick={() => chooseUrl(movie)}/>;\r\n                })}\r\n                </div>\r\n                <div className=\"row-pager\">\r\n                <span className=\"hide-pc\">........................................................</span>\r\n                { \r\n                movies?.slice(30,35).map((movie : Movie) => {\r\n                  return <Cover seeImdb={true} movie={movie} onClick={() => chooseUrl(movie)}/>;\r\n                })\r\n                }\r\n                </div>\r\n                <div className=\"hide-mobile row mt-1 pager-buttons\">\r\n                    <div className=\"pager-bt w-25 d-flex\">\r\n                    {numberOfPages.slice(pageOffSetStart,pageOffSetEnd).map((value,index) => {\r\n                      return <button className={handleClassName(index + pageOffSetStart)} onClick={() => handleClick(index + pageOffSetStart)}>{index + pageOffSetStart + 1}</button>\r\n                    })}\r\n                    <button className={handleClassName(-1)} disabled>[...]</button>\r\n                    <button className={handleClassName(-1)} onClick={() => handleClick(pageOffSetEnd + 4)}>{5 + pageOffSetEnd}</button>\r\n                    </div>\r\n                </div>\r\n                <Footer/>\r\n              </Pager>\r\n          \r\n              }\r\n\r\n      </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",["80","81"],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Navbar.tsx",["82","83","84","85"],"import React, {ChangeEvent, useState, useEffect} from 'react';\r\nimport { useHistory } from \"react-router-dom\";\r\nimport Api from '../util/Api';\r\nimport Sidebar from './Sidebar';\r\nimport Logo from '../imgs/logo.png'\r\n\r\ntype Props = {\r\n  context : [string, React.Dispatch<React.SetStateAction<string>>];\r\n  contextSidebar : [string, React.Dispatch<React.SetStateAction<string>>];\r\n  contextLoad : [boolean, React.Dispatch<React.SetStateAction<boolean>>];\r\n  contextArrive : [boolean, React.Dispatch<React.SetStateAction<boolean>>];\r\n  chooseUrlFunc : Function;\r\n}\r\n\r\ninterface Movie {\r\n  name: string,\r\n  urlImg: string,\r\n  data: Date, \r\n  url: string\r\n}\r\n\r\nexport default function Navbar(props : Props)  {\r\n  const [isExpanded, setExpanded] = useState(false);\r\n  const [searchWord, setSearchWord] = useState<string>(\"\");\r\n  const [searcBar, setSearcBar] = useState(false);\r\n  const [moviesSearched, setMovieSearched] = useState<Array<Movie>>([]);\r\n  const [category, setCategory] = props.context;\r\n  let history = useHistory();\r\n  const [load, setLoad] = props.contextLoad;\r\n  const [isArrive, setArrive] = props.contextArrive;\r\n\r\n  async function getByName(name : string, category: string) {\r\n    Api.post('/movies/get-by-name', {name : name, category: category})\r\n    .then((response: { data: Array<Movie>}) => {\r\n     setMovieSearched(response.data);\r\n    })\r\n    .catch((error: any) => {\r\n      console.log(error);\r\n    });\r\n  };\r\n\r\n  var handleSearch = function(event : ChangeEvent<HTMLInputElement>) : void{\r\n    if(event.target.value !== \"\"){\r\n      getByName(event.target.value, category);\r\n      setSearchWord(event.target.value)\r\n    }\r\n    else{\r\n      setMovieSearched([]);\r\n      setSearcBar(false)\r\n      setSearchWord(\"\")\r\n    }\r\n  }\r\n  async function loading(){\r\n    setArrive(false)\r\n    setTimeout(() => setLoad(false),1000)\r\n  }\r\n  var handleChange = function(event : ChangeEvent<HTMLSelectElement>) : void{\r\n    setCategory(event.target.value);\r\n    setLoad(true);\r\n    loading();\r\n    window.scrollTo(0, 0);\r\n  }\r\n\r\n  function selectMovie(url : string){\r\n    setLoad(true);\r\n    loading();\r\n    setTimeout(() => history.push(url),800)\r\n  }\r\n\r\n\r\n  return (<div className={\"box-shadow mobile-nav\"}>\r\n    <div className=\"navbar\" onClick={() => setMovieSearched([])}>\r\n    <div className={searchWord.length > 0? \"search-box\" : \"collapsed\"} >\r\n          {moviesSearched?.map((movie : Movie) => {\r\n              return <div className=\"search-row\" onClick={() => props.chooseUrlFunc(movie)}>\r\n                <span>{movie.name}</span>\r\n                <img alt={movie.name} src={movie.urlImg}></img>\r\n                </div>\r\n            })}\r\n        </div>\r\n      <div className=\"search-mobile\">\r\n        <div className=\"row \">\r\n        <button className=\"w-3\" onClick={() => setExpanded(!isExpanded)}>☰</button>\r\n        <img className=\"hide-mobile logo\" alt=\"logo\" src={Logo}></img>\r\n      </div>\r\n      </div>\r\n      <div className=\"w-50 mt-05 d-flex\">\r\n        <input className={searcBar? \"\" : \"collapsed\" } placeholder=\"Pesquisar por todo site\" onChange={handleSearch} ></input>\r\n        <button className={!searcBar? \"mobile-lupa\" : \"collapsed\" } onClick={() => setSearcBar(true)}>⌕</button>\r\n      </div>\r\n      <div className=\"w-25 mt-05 d-flex\">\r\n      <select onChange={handleChange}>\r\n        <option value=\"\">Todos</option>\r\n        <option value=\"filme\">Filmes</option>\r\n        <option value=\"serie\">Series</option>\r\n      </select>\r\n      </div>\r\n      <div></div>\r\n    </div>      \r\n      {isExpanded? <Sidebar contextArrive={props.contextArrive} contextLoad={props.contextLoad} context={props.contextSidebar} contextExpanded={[isExpanded, setExpanded]} /> : \"\"}\r\n  </div>\r\n  )\r\n}\r\n",["86","87"],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Cover.tsx",[],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\Detail.js",["88","89"],"import React, {useState, useEffect} from 'react';\r\nimport Api from '../util/Api'\r\nimport { useHistory } from \"react-router-dom\";\r\nexport default function Detail(props)  {\r\n  let history = useHistory();\r\n  const [movie, setMovie] = useState();\r\n  const [vVisibility, setVVisibility] = useState(false);\r\n  const [hasClcik, setHasClick] = useState(false);\r\n  const [iframe, setIframe] = useState();\r\n  const [skipAnounce, setSkipAnounce] = useState(false);\r\n\r\n  async function getByUrl(url){\r\n    await Api.post(\"/movies/get-by-url\",{url : url})\r\n    .then((response) => {\r\n      setMovie(response.data);\r\n      if(response.data.category ===\"filme\"){\r\n        webtor(response.data);\r\n      }\r\n    }).catch((error) => {\r\n      console.error(error)\r\n    })\r\n  }\r\n\r\n  function webtor(video){\r\n    window.webtor = window.webtor || [];\r\n\r\n    window.webtor.push({\r\n        id: 'player',\r\n        baseUrl: 'https://webtor.io',\r\n        magnet:  video.magnet.split(\",\")[0],\r\n        width: '100%',\r\n        height: '100%',\r\n        features: {\r\n            continue:    false\r\n        },\r\n        on: function(e) {\r\n            if (e.name === window.webtor.TORRENT_FETCHED) {\r\n                for (const f of e.data.files) {\r\n                    if(f.name === \"1XBET.COM_promo_SHREK_dinheiro_livre.mp4\" || f.name ===  \"COMANDOTORRENTS.COM.mp4\"){\r\n                        setHasClick(true);\r\n                    }\r\n                    if (!f.name.endsWith('.mkv')) continue;\r\n                }\r\n            }\r\n            if (e.name === window.webtor.TORRENT_ERROR) {\r\n                console.log('Torrent error!')\r\n            }\r\n            if (e.name === window.webtor.INITED) {\r\n            }\r\n            if (e.name === window.webtor.OPEN) {\r\n            }\r\n            if (e.name === window.webtor.OPEN_SUBTITLES) {\r\n            }\r\n        },\r\n    });\r\n  }\r\n  function webtorEp(ep){\r\n    window.webtor = window.webtor || [];\r\n\r\n    window.webtor.push({\r\n        id: 'player',\r\n        baseUrl: 'https://webtor.io',\r\n        magnet:  ep,\r\n        width: '100%',\r\n        height: '100%',\r\n        features: {\r\n            continue:    false\r\n        },\r\n        on: function(e) {\r\n            if (e.name === window.webtor.TORRENT_FETCHED) {\r\n                for (const f of e.data.files) {\r\n                    if(f.name === \"1XBET.COM_promo_SHREK_dinheiro_livre.mp4\" || f.name ===  \"COMANDOTORRENTS.COM.mp4\"){\r\n                        setHasClick(true);\r\n                    }\r\n                    if (!f.name.endsWith('.mp4')) continue;\r\n                }\r\n            }\r\n            if (e.name === window.webtor.TORRENT_ERROR) {\r\n                console.log('Torrent error!')\r\n            }\r\n            if (e.name === window.webtor.INITED) {\r\n            }\r\n            if (e.name === window.webtor.OPEN) {\r\n            }\r\n            if (e.name === window.webtor.OPEN_SUBTITLES) {\r\n            }\r\n        },\r\n    });\r\n  }\r\n\r\n  var handleChange = function(event){\r\n    webtorEp(event.target.value);\r\n    setVVisibility(true);\r\n  }\r\n\r\n  var handleChange2 = function(event){\r\n    webtorEp(event.target.value);\r\n    iframe.remove();\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n    window.scrollTo(0, 0);\r\n    getByUrl(history.location.pathname.replace(\"/\",\"\"))\r\n    watchAd(history)\r\n    // eslint-disable-next-line\r\n  },[])\r\n\r\n  async function watchAd(){\r\n var end = 0;\r\n  var interval = setInterval(function () {\r\n        if(end >= 10 || history.location.pathname === \"/\" || history.location.pathname === \"localhost:3000\"){\r\n            clearInterval(interval)\r\n        }\r\n    var scripts = [...document.getElementsByTagName(\"script\")]\r\n    scripts?.map(scr => {\r\n        if(scr.src.includes(\"p412601\")){\r\n            scr.remove()\r\n        }\r\n    })\r\n    end++;\r\n\r\n    }, 1000)\r\n  }\r\n\r\n function onWatch(){\r\n        setVVisibility(true)\r\n        if(hasClcik){\r\n            setSkipAnounce(true);\r\n        }\r\n  }\r\n\r\n  function getBestImg(movie){\r\n    if(movie?.urlImg3){\r\n      return movie.urlImg3;\r\n    }\r\n    else if(movie?.urlImg2){\r\n      return movie.urlImg2;\r\n    }\r\n    else{\r\n      return movie?.urlImg;\r\n    }\r\n  }\r\n\r\n\r\n  return (<div className=\"detail-bg\">\r\n                <button className=\"back-button\" onClick={() => history.push(\"/\")}>{window.innerWidth < 400? 'VOLTAR' : \"⮢\"}</button>\r\n                <div className=\"row\">\r\n                <div className=\"select-series\">\r\n                <select className={(vVisibility && movie?.category === \"serie\") ? '' : 'collapsed'} onChange={handleChange2} >\r\n                            <option  default>Selecionar outro epsódio</option>\r\n                        {movie?.eps.map(ep => {\r\n                            return (\r\n                                <option  value={ep[Object.keys(ep)]}>{Object.keys(ep)}</option>\r\n                            )\r\n                        })}\r\n                        </select>\r\n                </div>\r\n                </div>\r\n                <div className=\"parent-player\">\r\n                    <div className={vVisibility? \"visibility-show\" : \"\"} id=\"player\"></div>\r\n                </div>\r\n                <div className=\"row\">\r\n                    <div className={skipAnounce? \"skip-anounce\" : \"collapsed\"}>Pause o anúncio ou clique em Next para pular:</div>\r\n                </div>\r\n                <div className={skipAnounce? \"skip-invisible\" : \"collapsed\"} onClick={() => setSkipAnounce(false)}></div>\r\n                <img  className={!vVisibility? \"img-resume\" : \"collapsed\"} src={getBestImg(movie)} alt={movie?.name}></img>\r\n                {!vVisibility?\r\n                <div className={\"content-detail\"}>\r\n                    <div className=\"border-center row d-flex\">\r\n                    <div className=\"content-item\">\r\n                        <div className=\"title\">\r\n                            <h1 >{movie?.name.toUpperCase()}</h1>\r\n                        </div>\r\n                        <div className=\"studio\">\r\n                            <span>({movie?.studio})</span>\r\n                        </div>\r\n                        <div className=\"mt-1\">\r\n                            <span>Estreado: {movie?.release}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>Duração: {movie?.duration}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>Autor: {movie?.author}</span>\r\n                        </div>\r\n                        <div>\r\n                            <span>Gênero: {movie?.genere}</span>\r\n                        </div>\r\n                        <div className=\"text-yellow\">\r\n                            <span>Nota: {movie?.imdb}</span>\r\n                        </div>\r\n                        <div className=\"text-shadow-light-blue\">\r\n                            <p>Sinopse: {movie?.synopsis}</p>\r\n                        </div>\r\n\r\n                        <div className={movie?.category === \"filme\"? 'mt-2' : 'collapsed'}>\r\n                            <button onClick={() => onWatch() }>ASSISTIR</button>\r\n                        </div>\r\n                        <div className=\"mt-2 w-50 bg-dark-blue\">\r\n                        <select className={movie?.category === \"serie\"? '' : 'collapsed'} onChange={handleChange} >\r\n                            <option  default>Escolha um epsódio</option>\r\n                        {movie?.eps.map(ep => {\r\n                            return (\r\n                                <option  value={ep[Object.keys(ep)]}>{Object.keys(ep)}</option>\r\n                            )\r\n                        })}\r\n                        </select>\r\n                        </div>\r\n                        </div>\r\n                        <div className=\"hide-mobile  picture-item\">\r\n                            <img src={getBestImg(movie)} alt={movie?.name}></img>\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n                \r\n                : \"\"}\r\n        </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n",["90","91"],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\util\\Api.ts",[],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\App.tsx",[],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Carrossel.tsx",[],["92","93"],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Pager.tsx",[],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\util\\ArrayDB.ts",[],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\LoadComponent.tsx",[],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\Footer.tsx",[],["94","95"],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\ChooseUrl.tsx",[],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\pages\\DetailOne.js",["96"],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\index.tsx",[],"C:\\Users\\55999\\Desktop\\GitHub\\movies-download\\frontend\\src\\components\\MyRoutes.tsx",[],{"ruleId":"97","severity":1,"message":"98","line":11,"column":10,"nodeType":"99","messageId":"100","endLine":11,"endColumn":16},{"ruleId":"97","severity":1,"message":"101","line":12,"column":10,"nodeType":"99","messageId":"100","endLine":12,"endColumn":20},{"ruleId":"97","severity":1,"message":"102","line":13,"column":10,"nodeType":"99","messageId":"100","endLine":13,"endColumn":14},{"ruleId":"97","severity":1,"message":"103","line":14,"column":10,"nodeType":"99","messageId":"100","endLine":14,"endColumn":18},{"ruleId":"97","severity":1,"message":"104","line":1,"column":10,"nodeType":"99","messageId":"100","endLine":1,"endColumn":16},{"ruleId":"105","severity":1,"message":"106","line":101,"column":12,"nodeType":"107","messageId":"108","endLine":101,"endColumn":14},{"ruleId":"109","replacedBy":"110"},{"ruleId":"111","replacedBy":"112"},{"ruleId":"97","severity":1,"message":"113","line":1,"column":39,"nodeType":"99","messageId":"100","endLine":1,"endColumn":48},{"ruleId":"97","severity":1,"message":"102","line":29,"column":10,"nodeType":"99","messageId":"100","endLine":29,"endColumn":14},{"ruleId":"97","severity":1,"message":"103","line":30,"column":10,"nodeType":"99","messageId":"100","endLine":30,"endColumn":18},{"ruleId":"97","severity":1,"message":"114","line":64,"column":12,"nodeType":"99","messageId":"100","endLine":64,"endColumn":23},{"ruleId":"109","replacedBy":"115"},{"ruleId":"111","replacedBy":"116"},{"ruleId":"117","severity":1,"message":"118","line":9,"column":18,"nodeType":"99","messageId":"100","endLine":9,"endColumn":27},{"ruleId":"119","severity":1,"message":"120","line":116,"column":22,"nodeType":"121","messageId":"122","endLine":116,"endColumn":24},{"ruleId":"109","replacedBy":"115"},{"ruleId":"111","replacedBy":"116"},{"ruleId":"109","replacedBy":"123"},{"ruleId":"111","replacedBy":"124"},{"ruleId":"109","replacedBy":"125"},{"ruleId":"111","replacedBy":"126"},{"ruleId":"117","severity":1,"message":"127","line":61,"column":10,"nodeType":"99","messageId":"100","endLine":61,"endColumn":25},"@typescript-eslint/no-unused-vars","'genere' is assigned a value but never used.","Identifier","unusedVar","'isExpanded' is assigned a value but never used.","'load' is assigned a value but never used.","'isArrive' is assigned a value but never used.","'render' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","no-native-reassign",["128"],"no-negated-in-lhs",["129"],"'useEffect' is defined but never used.","'selectMovie' is defined but never used.",["128"],["129"],"no-unused-vars","'setIframe' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["128"],["129"],["128"],["129"],"'closeFullscreen' is defined but never used.","no-global-assign","no-unsafe-negation"]